// pages/gongyihuodong/list.js Page({ data: { baseUrl: '', dataList: [], page: 1, limit: 10, total: 0, loading: false, finished: false }, onLoad(options) { const baseUrl = wx.getStorageSync('baseUrl'); this.setData({ baseUrl: baseUrl }); this.getList(); wx.startPullDownRefresh(); }, onReady() {}, onShow() { this.setData({ page: 1, dataList: [], finished: false }); this.getList(); }, onHide() {}, onUnload() {}, onPullDownRefresh() { this.setData({ page: 1, dataList: [], finished: false }); this.getList(); }, onReachBottom() { if (!this.data.finished) { this.getList(); } }, onShareAppMessage() {}, getList: function () { if (this.data.loading || this.data.finished) return; let that = this; that.setData({ loading: true }); wx.request({ url: that.data.baseUrl + 'gongyihuodong/page', data: { page: that.data.page, limit: that.data.limit }, method: 'GET', header: { 'content-type': 'application/json' }, success: function (res) { wx.stopPullDownRefresh(); if (res.data.code === 0) { const list = res.data.data.list; const total = res.data.data.total; if (list.length > 0) { that.setData({ dataList: [...that.data.dataList, ...list], page: that.data.page + 1, total: total, loading: false, finished: that.data.dataList.length + list.length >= total }); } else { that.setData({ loading: false, finished: true }); } } else { that.setData({ loading: false }); wx.showToast({ title: res.data.msg || '获取数据失败', icon: 'none', duration: 2000 }); } }, fail: function (err) { wx.stopPullDownRefresh(); that.setData({ loading: false }); wx.showToast({ title: '服务器连接失败', icon: 'none', duration: 2000 }); } }); }, goDetail: function (e) { const id = e.currentTarget.dataset.id; wx.navigateTo({ url: './detail?id=' + id + '&baseUrl=' + this.data.baseUrl }); }, goAdd: function () { wx.navigateTo({ url: './add-or-update?baseUrl=' + this.data.baseUrl }); } });